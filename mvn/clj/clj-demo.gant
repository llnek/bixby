// This library is distributed in  the hope that it will be useful but without
// any  warranty; without  even  the  implied  warranty of  merchantability or
// fitness for a particular purpose.
// The use and distribution terms for this software are covered by the Eclipse
// Public License 1.0  (http://opensource.org/licenses/eclipse-1.0.php)  which
// can be found in the file epl-v10.html at the root of this distribution.
// By using this software in any  fashion, you are agreeing to be bound by the
// terms of this license. You  must not remove this notice, or any other, from
// this software.
// Copyright (c) 2013, Ken Leung. All rights reserved.


//////////////////////////////////////////////////////////////////////////////
// clean
target (cleanCljDemo: '') {
  ant.delete (quiet: true, includeemptydirs: true) {
    fileset (dir: "${buildDir}/demo") {
      include (name: '**/*')
      exclude (name: 'splits/**')
      exclude (name: 'flows/**')
    }
  }
}

//////////////////////////////////////////////////////////////////////////////
// build
target (buildCljDemo: '') {
  depends (cleanCljDemo,  resolve, preBuild)
  println "##############################################################################"
  println "Building module ${gantProjectName}#clojure.skaro.demo"
  println "##############################################################################"
  doCompileCljDemo()
}

//////////////////////////////////////////////////////////////////////////////
//
def doCompileCljDemo() {

  cljDemo()

  ant.copy (todir: "${buildDir}/demo") {
    fileset (dir: "${srcDir}/clojure/demo") {
      exclude (name: '**/*.clj')
      exclude (name: '**/.svn')
    }
  }

  if (false) {
    // no need to jar them
    ant.jar (destfile: "${distribDir}/exec/demo-clj-${buildVersion}.jar") {
      fileset (dir: "${buildDir}") {
        include (name: 'demo/**')
        exclude (name: 'demo/splits/**')
        exclude (name: 'demo/flows/**')
        exclude (name: '**/log4j.properties')
        exclude (name: '**/logback.xml')
      }
  }

  }
}

//////////////////////////////////////////////////////////////////////////////
//
def cljDemo() {
  //println "cljhhh_Demo:"
  ant.java (classname: 'clojure.lang.Compile',
        fork: true,
        failonerror: true,
        maxmemory: '2048m',
        classpathref: 'compilePathId') {
    sysproperty (key: 'clojure.compile.warn-on-reflection', value: true)
    sysproperty (key: 'clojure.compile.path', value: "${buildDir}")
    arg (value: 'demo.file.core')
    arg (value: 'demo.fork.core')
    arg (value: 'demo.http.core')
    arg (value: 'demo.jetty.core')
    arg (value: 'demo.jms.core')
    arg (value: 'demo.mvc.core')
    arg (value: 'demo.pop3.core')
    arg (value: 'demo.steps.core')
    arg (value: 'demo.tcpip.core')
    arg (value: 'demo.timer.core')
  }
}

//////////////////////////////////////////////////////////////////////////////
//





