// This library is distributed in  the hope that it will be useful but without
// any  warranty; without  even  the  implied  warranty of  merchantability or
// fitness for a particular purpose.
// The use and distribution terms for this software are covered by the Eclipse
// Public License 1.0  (http://opensource.org/licenses/eclipse-1.0.php)  which
// can be found in the file epl-v10.html at the root of this distribution.
// By using this software in any  fashion, you are agreeing to be bound by the
// terms of this license. You  must not remove this notice, or any other, from
// this software.
// Copyright (c) 2013-2015, Ken Leung. All rights reserved.

//////////////////////////////////////////////////////////////////////////////
// clean
target (cleanJSLib: '') {
  ant.delete ( dir: "${buildDir}/js", quiet: true)
  cleanLocalJs()
}

target (cleanJSLibTest: '') {
  ant.delete ( dir: "${buildTestDir}/js", quiet: true)
}

//////////////////////////////////////////////////////////////////////////////
// test
target (buildJSLibTest: '') {
  depends(cleanJSLibTest, preTest)
  doCompileJSLibTest()
}

target (runJSLibTest: '') {
  depends(buildJSLibTest)
  doRunJSLibTest()
}

//////////////////////////////////////////////////////////////////////////////
//
def doCompileJSLibTest() {
}

//////////////////////////////////////////////////////////////////////////////
//
def doRunJSLibTest() {
}

def cleanLocalJs() {
  ant.delete ( dir: "${srcDir}/js/${bldDir}", quiet: true)
}

//////////////////////////////////////////////////////////////////////////////
// build
target (buildJSLib: '') {
  depends (cleanJSLib, checkTpcl, resolve, preBuild)
  println "##############################################################################"
  println "Building module ${gantProjectName}#skaro+js"
  println "##############################################################################"
  dir= "${srcDir}/js"
  new File(dir + "/cherimoia").listFiles().each { f ->
    doCompileJSLib(dir, f);
  }
  cleanLocalJs()
}

//////////////////////////////////////////////////////////////////////////////
//
def doCompileJSLib(dir,f) {
  par= f.getParentFile().getName()
  mid= par + "/" + f.getName()
  out="${buildDir}"
  ant.exec (executable: 'babel', dir: "${dir}") {
    arg(value: "--modules")
    arg(value: "amd")
    arg(value: "--module-ids")
    arg(value: "${mid}")
    arg(value: '--out-dir')
    arg(value: "${out}")
  }
  ant.replace(file: "${dir}/${out}/${mid}",token:"/*@@",value:"")
  ant.replace(file: "${dir}/${out}/${mid}",token:"@@*/",value:"")
  ant.move(file: "${dir}/${out}/${mid}",todir: "${buildDir}/js/${par}")
}

//////////////////////////////////////////////////////////////////////////////
//




